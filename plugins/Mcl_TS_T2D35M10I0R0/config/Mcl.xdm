<?xml version='1.0'?>
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Mcl.xdm
*   @version 1.0.0
*
*   @brief   AUTOSAR Mcl - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Mcl Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : AUTOSAR 4.2 MCAL
*   Platform             : PA
*   Peripheral           : eDMA
*   Dependencies         : none
*
*   Autosar Version      : 4.2.2
*   Autosar Revision     : ASR_REL_4_2_REV_0002
*   Autosar Conf.Variant :
*   SW Version           : 1.0.0
*   Build Version        : MPC574XG_MCAL_1_0_0_RTM_ASR_REL_4_2_REV_0002_20170217
*
*   (c) Copyright 2006-2016 Freescale Semiconductor, Inc. 
*       Copyright 2017 NXP
*   All Rights Reserved.
====================================================================================================
====================================================================================================
====================================================================================================
-->

<d:ctr type="AUTOSAR" factory="autosar" 
    xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
    xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
    xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
        <d:ctr name="TS_T2D35M10I0R0" type="AR-PACKAGE">
            <a:a name="UUID" value="ECUC:b29f2c08-0514-4b78-8757-9cd197ea3150"/>
            <d:lst type="ELEMENTS">
                <d:chc name="Mcl" type="AR-ELEMENT" value="MODULE-DEF">
                    <v:ctr type="MODULE-DEF">
                        <a:a name="RELEASE" value="asc:4.2"/>
                        <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                            <ad:ADMIN-DATA>
                                <ad:DOC-REVISIONS>
                                    <ad:DOC-REVISION>
                                        <ad:REVISION-LABEL>4.6.0</ad:REVISION-LABEL>
                                        <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                                        <ad:DATE>2014-10-31</ad:DATE>
                                    </ad:DOC-REVISION>
                                </ad:DOC-REVISIONS>
                            </ad:ADMIN-DATA>
                        </a:a>
                        <a:a name="DESC" 
                             value="EN: Vendor specific: Configuration of the Mcl (MicroController Library ) module."/>
                        <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
                        <a:a name="UUID" value="ECUC:b750487e-a7d6-48f5-a05a-d25be733d971"/>

                        <!-- /** @implements IMPLEMENTATION_CONFIG_VARIANT_Object */ -->
                        <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                            <a:a name="LABEL" value="Config Variant"/>
                            <a:a name="UUID" value="ECUC:22d0e0f2-35f0-4b4c-8241-a27fb18f9ad4"/>
                            <a:da name="DEFAULT" value="VariantPostBuild"/>
                            <a:da name="RANGE">
                                <a:v>VariantPostBuild</a:v>
                                <a:v>VariantPreCompile</a:v>
                            </a:da>
                        </v:var>

                        <!-- /** @implements MclGeneral_Object */ -->
                        <v:ctr name="MclGeneral" type="IDENTIFIABLE">
                            <a:a name="DESC" value="EN: Vendor specific: Configuration of general Mcl parameters."/>
                            <a:a name="UUID" value="ECUC:967c3e2b-7845-4bc8-848f-e0a6291bf4d0"/>
                            <a:a name="LABEL" value="Mcl General Configuration"/>

                            
                             <!-- /** @implements MclDisableDemReportErrorStatus_Object */ -->
                            <v:var name="MclDisableDemReportErrorStatus" type="BOOLEAN">
                                <a:a name="DESC">
                                <a:v><![CDATA[EN:<html><p>Enable/Disable Dem error reporting.</p></html>]]></a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="LABEL" value="Mcl Disable Production Error Reporting"/>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false" />
                                <a:a name="UUID" value="ECUC:9936de9b-1261-4720-9e80-145e3870a2cb" />
                                <a:da name="DEFAULT" value="false" />
                                <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../EnableDMA, 'true') = 'true'"/>
                                </a:a>  
                            </v:var>

                            <!-- @implements MclDevErrorDetect_Object -->
                            <v:var name="MclDevErrorDetect" type="BOOLEAN">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        <p>Switches the Development Error Detection and Notification on or off.</p>
                                            <ul>
                                                <li>true: Enabled.</li>
                                                <li>false: Disabled.</li>
                                            </ul>
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="LABEL" value="Mcl Development Error Detect"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:d8897d9d-1ae0-4020-85fc-70dfeb9f28fe"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            <!-- not used anymore, only kept for backward compatibility of user config-->  
                            <v:var name="MclDmaNotificationSupported" type="BOOLEAN">
                                <a:a name="LABEL" value="Mcl Dma Notification Supported"/>
                                <a:a name="DESC">
                                    <a:v>
                                            <![CDATA[EN: <html> This parameter is obsolete. The newly added MclIsrAvailable configures the interrupts available.
                                            </html>]]>
                                    </a:v>
                                </a:a>        
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="Freescale"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:3d5a31fa-1f07-473c-a834-28de454e98d5"/>
                                <a:da name="DEFAULT" value="true"/>
                                <a:a name="EDITABLE" value="false"/>
                            </v:var>
                           <!-- @implements MclErrorChecking_Object -->  
                            <v:var name="MclErrorChecking" type="BOOLEAN">
                                <a:a name="LABEL" value="Mcl Dma Error Notification Supported"/>
                                <a:a name="DESC"><a:v><![CDATA[EN: Vendor specific:
                                <html>
                                    Vendor specific: Switch to indicate if the error user notification is supported.
                                </html> ]]>
                                </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 

                                </a:a>
                                <a:a name="ORIGIN" value="Freescale"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:5bc9853b-1050-4c44-8d22-909a3f601ec4"/>
                                <a:da name="DEFAULT" value="true"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../EnableDMA, 'true') = 'true'"/>
                                </a:a> 
                            </v:var>
                            
                            <v:var name="Mcl_VersionInfoApi" type="BOOLEAN">
                                <a:a name="DESC" value="EN: Vendor specific: Enables/Disables the get version info API function"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:42da3770-7248-47fd-b1a8-8986ca635060"/>
                                <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
                             <v:var name="Mcl_DmaGetChannelErrorStatusApi" type="BOOLEAN">
                                <a:a name="DESC" value="EN: Vendor specific: Enables/Disables the get channel error status API Mcl_DmaGetChannelErrorStatus"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:42da3770-7248-47fd-b1a8-8986ca635033"/>
                                <a:da name="DEFAULT" value="false"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../EnableDMA, 'true') = 'true'"/>
                                </a:a> 
                            </v:var>
                            
                            <v:var name="Mcl_DmaGetGlobalErrorStatusApi" type="BOOLEAN">
                                <a:a name="DESC" value="EN: Vendor specific: Enables/Disables the get global error status API Mcl_DmaGetGlobalErrorStatus"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:42da4570-7248-47fd-b1a8-8986ca635033"/>
                                <a:da name="DEFAULT" value="false"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../EnableDMA, 'true') = 'true'"/>
                                </a:a> 
                            </v:var>
                            
                            <!-- MclDeInitApi -->
                            <v:var name="Mcl_DeInitApi" type="BOOLEAN">
                              <a:a name="DESC" value="EN: Vendor specific: Enables/Disables the Mcl_DeInit API"/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                              </a:a>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                              <a:a name="ORIGIN" value="NXP"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" value="ECUC:c2a44725-ca66-4165-9aa8-dc51d263ef72"/>
                              <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            
                            <!-- EnableDMA -->
                            <v:var name="EnableDMA" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v><![CDATA[EN:<html> Vendor specific: <p>Activates/Deactivates DMA configuration. DMA configuration must be enabled here.</p></html>]]></a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Mcl DMA Supported"/>
                              <a:a name="ORIGIN" value="NXP"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" value="ECUC:72d28c1d-9311-41a5-ba35-40021a249a75"/>
                              <a:da name="DEFAULT" value="true"/>
                            </v:var>
                            
 
                            <!-- EnableCrossBarSwitch -->
                            <v:var name="MclEnableCrossbarSwitch" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v><![CDATA[EN:<html> Vendor specific: <p>Activates/Deactivates Crossbar Switch configuration</p></html>]]></a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                              </a:a>
                              <a:a name="LABEL" value="Mcl Crossbar Switch Supported"/>
                              <a:a name="ORIGIN" value="NXP"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" value="ECUC:85d28c1d-9311-41a5-ba35-40021a249a75"/>
                              <a:da name="DEFAULT" value="false"/>
                              <a:da name="EDITABLE" value="true"/>
                            </v:var>
                            <!-- EnableUserModeSupport -->
                            <v:var name="MclEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                When this parameter is enabled, the MCL module will adapt to run from User Mode, with the following measures:<p/>
                                                b) using 'call trusted function' stubs for all internal function calls that access registers requiring supervisor mode.<p/>
                                                for more information, please see chapter 5.7 User Mode Support in IM <p/>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                    </a:a>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="not(node:containsValue(ecu:list('Mcl.Ipv.UserMode.Available'),'NaN'))"/>
                                    </a:a>
                                    <a:a name="LABEL" value="Mcl Enable User Mode Support"/>
                                    <a:a name="ORIGIN" value="Freescale"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:fdf29f83-dbae-4cd2-abf2-c0941851a05e"/>
                                    <a:da name="DEFAULT" value="false"/>
                            </v:var> 
           
                            <!-- @implements MclErrorNotificationDma0_Object -->
                             <v:var name="MclErrorNotificationDma0" type="FUNCTION-NAME">
                                <a:a name="LABEL" value="Mcl Error Notification for Dma Instance 0"/>
                                <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html> Vendor specific:
                                    User callback function
                                    NOTE: please use NULL or NULL_PTR w/o any quotes. If the used string is different from NULL
                                    or NULL_PTR it will be used as the configured function name.
                                    </html>]]>
                                </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                </a:a>
                                <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../MclErrorChecking, 'true') = 'true' and node:fallback(../EnableDMA, 'true') = 'true'"/>
                                </a:a>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:c5326d00-5f70-500e-90c4-36a4df202b6f"/>
                                <a:da name="DEFAULT" value="NULL_PTR"/>
                                <a:da name="INVALID" type="XPath">
                                <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                                false="Invalid name of the Mcl Notification. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                <a:tst expr="node:fallback(../MclErrorChecking, 'true')='false' and 
                                    normalize-space(.) != '&quot;NULL_PTR&quot;' and 
                                    normalize-space(.) != 'NULL_PTR' and
                                    normalize-space(.) != '&quot;NULL&quot;' and 
                                    normalize-space(.) != 'NULL'" 
                                true="The error notification can be used only if Mcl Dma Error Notification Supported configuration is enabled in the MclGeneral TAB.Set the notification to NULL_PTR or enable the Eror Notification Support."/>
                                </a:da>
                            </v:var>
                            
                            <v:lst name="MclIsrAvailable" type="MAP">
                                    <a:a name="LABEL" value="Mcl Interrupts Available"/>
                                    <a:da name="MIN" value="32"/>
                                    <a:da name="MAX" value="32"/>
                                <v:ctr name="MclIsrAvailable" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html> Vendor specific:
                                            Mcl ISRs Available.Please check the ISRs which are needed for the application.
                                            Warning: This is a precompile configuration.If you uncheck a ISR, you will not be able to enable the 
                                            respective channel or error functionality at post build time.
                                            </html>
                                                ]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:04ac838a-72f5-480b-b9ec-cc43a5100e5b"/>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                        
                                        <v:var name="MclIsrName" type="ENUMERATION">
                                            <a:a name="LABEL" value="Mcl Interrupt Name"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Mcl Interrupt Name.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:00a8505c-39fd-499a-9b7f-acf75976173b"/>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Mcl.MclConfigSet.DmaChannels'))[position()-1=node:fallback(node:current()/../@index,'0')]">
                                            </a:da>
                                            <a:da name="EDITABLE" value="false"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Mcl.MclConfigSet.DmaChannels')"/>
                                            
                                        </v:var>
                                        
                                        <v:var name="MclIsrEnabled" type="BOOLEAN">
                                            <a:a name="LABEL" value="Mcl Interrupt Enabled"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                        <![CDATA[EN: <html> Vendor specific: Switch to indicate if the interrupt is enabled 
                                                        </html>]]>
                                                </a:v>
                                            </a:a>        
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:e1524282-63e7-4426-bfb8-590fd3d096d6"/>
                                            <a:da name="DEFAULT" value="true"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="node:fallback(../../../EnableDMA, 'true') = 'true'"/>
                                            </a:a> 
                                        </v:var>
                                    </v:ctr>
                            </v:lst> 
                        </v:ctr>
                        

                        <v:ctr name="MclDemEventParameterRefs" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v>
                                         <![CDATA[EN: <html> Vendor specific:
                                                Container for the references to DemEventParameter elements which shall be 
                                                invoked using the API Dem_reportErrorStatus in case the corresponding error occurs. 
                                                The EventId is taken from the referenced DemEventParameter/DemEventId value.
                                                </html>]]>
                                    </a:v> 
                                </a:a>   
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="UUID" value="ECUC:b181c056-c89a-4dfb-b4e4-82717666b9f1"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                </a:a> 

                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>

                                <v:ref name="MCL_E_DMA_DESCRIPTOR" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when a descriptor error occurs"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:70c4dc1d-3618-4412-b231-9c7d0d9ad78d"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                <v:ref name="MCL_E_DMA_ECC" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when an unrecoverable ECC error occured"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:48d44ebc-e362-48b6-869a-df2b1bd4abdc"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                <v:ref name="MCL_E_DMA_BUS" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when a bus error occured."/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:b367f8f7-ad1d-458e-8e87-6f57ab58b165"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                
                                <v:ref name="MCL_E_DMA_PRIORITY" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when a descriptor error occurs"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:67c39b2d-4477-466e-b96b-cd1a6d7492c6"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                
                                <v:ref name="MCL_E_DMA_INCONSISTENCY" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when a descriptor error occurs"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:67c39b2d-4588-466e-b96b-cd1a6d7492c6"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                
                                <v:ref name="MCL_E_DMA_UNRECOGNIZED" type="SYMBOLIC-NAME-REFERENCE">
                                    <a:a name="DESC" 
                                         value="EN: Vendor specific: Reference to the DemEventParameter which shall be issued when a descriptor error occurs"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:67c39b2d-4477-466e-b96b-cd1a6d8882c6"/>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="node:fallback(../../MclGeneral/EnableDMA ='true', 'true') and node:fallback(../../MclGeneral/MclDisableDemReportErrorStatus='false', 'false')"/> 
                                    </a:a>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                </v:ref>
                                                                
                        </v:ctr>
  
                                    
                       <!--  @implements   MclConfigSet_Object  -->
                        <v:lst name="MclConfigSet" type="MAP">
                                <a:da name="MIN" value="1"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="num:i(count(../MclConfigSet/*)) &gt; 1" true="There must be only one MclConfigSet."/>
                                </a:da>                            
                        <v:ctr name="MclConfigSet" type="IDENTIFIABLE">

                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN: <html> Vendor specific: This container is the base for a multiple configuration set
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:b824a41e-5f5e-48b6-9c71-0e63b429c3da"/>
                                
                                
    
                                <!--  @implements   MclConfigSet_Object  -->
                                <v:lst name="DmaInstance" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    <a:da name="MAX" value="2"/>
                                    <a:da name="INVALID" type="XPath">
                                       <a:tst expr="(num:i(count(./*))=2) and (num:i(ecu:get('Mcl.eDMA.ChannelNumber') div ecu:get('Mcl.eDMA.ChannelNumberPerDmaInstance'))=1)" true="Number of the Dma Instances Configured is different than number of existing Dma hardware Instances."/>
                                    </a:da>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="../../../MclGeneral/EnableDMA ='true'"/>     
                                    </a:a> 
                                    <a:a name="LABEL" value="DMA Instance"/>
                               
                                    <v:ctr name="DmaInstance" type="IDENTIFIABLE">
                                        <a:a name="DESC" value="EN: Vendor specific: Configuration of a DMA Instance."/>
                                        <a:a name="UUID" value="ECUC:5d10957b-c38a-45ed-b06b-4b7e365f1cc3"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                       <v:var name="DmaHwInstance" type="ENUMERATION">
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Select the physical eDMA Instance.
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:f7cbd8ea-f1bc-41a1-ad0a-e9f4015cf1e5"/>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Mcl.MclConfigSet.DmaInstances'))[position()]">
                                            </a:da>                  

                                            <a:da name="INVALID" type="XPath">
                                            </a:da>
                                            <a:da name="EDITABLE" value="false"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Mcl.MclConfigSet.DmaInstances')"/>
                                        </v:var>
                                
                                        <v:var name="MclEDMA_CX" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[CX].
                                                        Cancel Transfer.
                                                        0 - Normal operation.
                                                        1 - Cancel the remaining data transfer. 
                                                               Stop the executing channel and force the minor loop to be finished. 
                                                               The cancel takes effect after the last write of the current read/write sequence. 
                                                               The CXFR bit clears itself after the cancel has been honored. 
                                                               This cancel retires the channel normally as if the minor loop was completed.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Cancel Transfer"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:244bee90-b361-4d1b-9092-37ac333b32c7"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>  
                                            </a:a>
                                        </v:var>
                                        
                                        <v:var name="MclEDMA_ECX" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[ECX].
                                                        Error Cancel Transfer.
                                                        0 - Normal operation.
                                                        1 - Cancel the remaining data transfer in the same fashion as the CX cancel transfer. 
                                                               Stop the executing channel and force the minor loop to be finished. 
                                                               The cancel takes effect after the last write of the current read/write sequence. 
                                                               The ECX bit clears itself after the cancel cancel has been honored. 
                                                               In addition to cancelling the transfer, the ECX treats the cancel as an error condition; 
                                                               thus updating the DMAES register and generating an optional error interrupt.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Error Cancel Transfer"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:c1adfc64-6ce4-4378-ad5b-f6b5e1778a6c"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                               
                                        <v:var name="MclEDMAChGroup0Priority" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[GRP0PRI] field configuration.
                                                        Group 0 priority level when fixed priority group arbitration is enabled.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:57e011aa-0227-46d2-95b9-1ad432d12b66"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(node:fallback(../MclEDMA_ERGA, 'false') = 'false') and (ecu:get('Mcl.eDMA.PriorityGroup0Exists')='true') and (../../../../../MclGeneral/EnableDMA ='true')"/>
                                            </a:a> 
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclEDMAChGroup3Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup2Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup1Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(. > ecu:get('Mcl.eDMA.MaxPriorityGroupId')) and (ecu:get('Mcl.eDMA.PriorityGroup0Exists')='true')" 
                                                       true="Invalid value.Check hardware manual eDMA_CR register to see the range for parameter."/>
                                               
                                            </a:da>
                                            <a:a name="LABEL" value="Channel Group 0 Priority"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=3"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            
                                        </v:var>
                                        
                                        <v:var name="MclEDMAChGroup1Priority" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[GRP1PRI] field configuration.
                                                        Group 1 priority level when fixed priority group arbitration is enabled.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:07a7cb8f-4feb-4067-bbf7-e18e4a75406f"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(node:fallback(../MclEDMA_ERGA, 'false') = 'false') and (ecu:get('Mcl.eDMA.PriorityGroup1Exists')='true') and (../../../../../MclGeneral/EnableDMA ='true')"/>
                                            </a:a> 
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclEDMAChGroup0Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup2Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup3Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(. > ecu:get('Mcl.eDMA.MaxPriorityGroupId')) and (ecu:get('Mcl.eDMA.PriorityGroup1Exists')='true')" 
                                                       true="Invalid value.Check hardware manual eDMA_CR register to see the range for parameter."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Channel Group 1 Priority"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=3"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclEDMAChGroup2Priority" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[GRP2PRI] field configuration.
                                                        Group 2 priority level when fixed priority group arbitration is enabled.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:895b9b77-9484-4bd6-9493-831e8aa6f58d"/>
                                            <a:da name="DEFAULT" value="2"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(node:fallback(../MclEDMA_ERGA, 'false') = 'false') and (ecu:get('Mcl.eDMA.PriorityGroup2Exists')='true') and (../../../../../MclGeneral/EnableDMA ='true')"/>
                                            </a:a> 
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclEDMAChGroup0Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup1Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup3Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(. > ecu:get('Mcl.eDMA.MaxPriorityGroupId')) and (ecu:get('Mcl.eDMA.PriorityGroup2Exists')='true')" 
                                                       true="Invalid value.Check hardware manual eDMA_CR register to see the range for parameter."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Channel Group 2 Priority"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=3"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            
                                        </v:var>
                                        
                                        <v:var name="MclEDMAChGroup3Priority" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[GRP3PRI] field configuration.
                                                        Group 3 priority level when fixed priority group arbitration is enabled.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:52c458c1-577c-42e2-b4b4-d77cc79662e7"/>
                                            <a:da name="DEFAULT" value="3"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(node:fallback(../MclEDMA_ERGA, 'false') = 'false') and (ecu:get('Mcl.eDMA.PriorityGroup3Exists')='true') and (../../../../../MclGeneral/EnableDMA ='true')"/>
                                            </a:a> 
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclEDMAChGroup0Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup1Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(../MclEDMAChGroup2Priority  = .)" true=" The priority must be unique for the group."/>
                                                <a:tst expr="(. > ecu:get('Mcl.eDMA.MaxPriorityGroupId')) and (ecu:get('Mcl.eDMA.PriorityGroup3Exists')='true')" 
                                                       true="Invalid value.Check hardware manual eDMA_CR register to see the range for parameter."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Channel Group 3 Priority"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=3"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                                
                               
                                        <v:var name="MclEDMA_CLM" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[CLM].
                                                        Continuous Link Mode.
                                                        0 - A minor loop channel link made to itself will go through channel arbitration before being activated again.
                                                        1 - A minor loop channel link made to itself will not go through channel arbitration before being activated again. 
                                                               Upon minor loop completion the channel will active again if that channel has has a minor loop channel link enabled and the link channel is itself.
                                                               This effectively applies the minor loop offsets and restarts the next minor loop.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Continuous Link Mode"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b595ac4b-65a7-431c-a948-37bea8c36302"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                                        
                                        <v:var name="MclEDMA_HALT" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[HALT].
                                                        Halt eDMA Operations.
                                                        0 - Normal operation.
                                                        1 - Stall the start of any new channels. 
                                                               Executing channels are allowed to complete. 
                                                               Channel execution will resume when the HALT bit is cleared.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Halt eDMA Operations"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:ba1a826e-eaa0-4975-a20e-b754d1f7261f"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>

                                        <v:var name="MclEDMA_HOE" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[HOE].
                                                        Halt On Error.
                                                        0 - Normal operation.
                                                        1 - Any error will cause the HALT bit to be set.
                                                               Subsequently, all service requests will be ignored until the HALT bit is cleared.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Halt On Error"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:cce36948-aa6d-419c-ae97-a483c133fe6c"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a>                                   
                                        </v:var>

                                        <v:var name="MclEDMA_ERGA" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[ERGA].
                                                        Enable Round Robin Group Arbitration.
                                                        0 - Fixed priority arbitration is used for selection among the groups.
                                                        1 - Round robin arbitration is used for selection among the groups.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Round Robin Group Arbitration"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:eccbc35d-355b-477e-9c71-f2b7a440de8d"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                                        <v:var name="MclEDMA_ERCA" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[ERCA].
                                                        Enable Round Robin Channel Arbitration.
                                                        0 - Fixed-priority arbitration is used for channel selection within each group.
                                                        1 - Round-Robin arbitration is used for channel selection within each group.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Round Robin Channel Arbitration"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b7ee1249-087c-42f7-be8b-3233fb220cfc"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>

                                        <v:var name="MclEDMA_EDBG" type="BOOLEAN">

                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA_CR[EDBG].
                                                        Enable Debug.
                                                        0 - The assertion of the system debug control input is ignored.
                                                        1 - The assertion of the system debug control input causes the eDMA to stall the start of a new channel. 
                                                               Executing channels are allowed to complete. 
                                                               Channel execution will resume when either the system debug control input is negated or the EDBG bit is cleared.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Debug"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:feb20843-4496-4542-8956-ab9a45086f8a"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/> 
                                           </a:a> 
                                        </v:var>  
                                    </v:ctr>  
                                </v:lst>

                                <v:lst name="DMAChannel" type="MAP">
                                    <a:a name="LABEL" value="DMA Logical Channels"/>
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="MAX" value="32"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="../../../MclGeneral/EnableDMA ='true' and (num:i(count(*))= 0)"
                                        true ="At least one channel must be configured when Mcl DMA Supported is checked!"/>
                                    </a:da>
                                    <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="../../../MclGeneral/EnableDMA ='true'"/>
                                    </a:a>


                                    <v:ctr name="DMAChannel" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html> Vendor specific:
                                            All data needed to configure one DMA channel.
                                            </html>
                                                ]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:04ac837b-72f5-480b-b9ec-cc43a5100e5b"/>
                                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v> 
                                        </a:a>
                                        <v:var name="MclDMAChannelId" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Id for the current DMA logical Channel.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="DMA Channel ID"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="false"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:e621be28-bb23-41dc-803b-5a40d1ba1318"/>
                                            <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;32"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                                                false="Value out of range: must be in range 0 to N-1 (N is number of configured channels). Use the Calc button to calculate correct default value"/>
                                                <a:tst     expr="text:uniq(node:fallback( ../../*/MclDMAChannelId, text:split('0') ), node:fallback( ., 1 ))" 
                                                false="Duplicated value, MclDMAChannelId must be unique across all Mcl channels. Use the Calc button to calculate correct default value."/>
                                            </a:da>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a>                                             
                                        </v:var>
                                        
                                        <v:var name="DmaHwChannel" type="ENUMERATION">
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Select the physical eDMA Channel.
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:0aff248e-f32e-42b6-94be-372ca32a5726"/>
                                            <!--  default value - increment the last channel used -->
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Mcl.MclConfigSet.DmaChannels'))[position()-1=node:fallback(node:current()/../@index,'0')]">
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="text:uniq(../../*/DmaHwChannel, .)" false="Duplicate physical DMA channel"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Mcl.MclConfigSet.DmaChannels')"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/> 
                                            </a:a> 
                                        </v:var>
                                        
                                        <v:var name="DMAChannelPriority" type="INTEGER">
                                            <a:a name="LABEL" value="DMA Channel Priority"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html> Vendor specific: Priority level for DMA channel. Priorities assigned to channels from the same Group must be unique.
                                                        <p> Please read section <b>Enhanced Direct Memory Access (eDMA)</b> from the manual for more information</p>
                                                        </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:c6cdae0c-ae94-4618-b593-06fcc5cc6367"/>
                                            <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=15"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                                        
                                        <v:var name="ECP" type="BOOLEAN">
                                            <a:a name="LABEL" value="Enable Channel Preemption"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html> Vendor specific:
                                                        Enable channel preemption.
                                                        <p> 0 (unchecked) - Channel n cannot be suspended by a higher priority channel's service request</p>
                                                        <p> 1 (checked)   - Channel n can be temporarily suspended by a higher priority channel's service request</p>
                                                        </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:6226a5b4-0c7c-4da2-a5df-65859769c65b"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                                        
                                        <v:var name="DPA" type="BOOLEAN">
                                            <a:a name="LABEL" value="Disable Preempt Ability"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html> Vendor specific:
                                                        Disable preemptive ability.
                                                        <p> 0 (unchecked) - Channel n can suspen a lower priority channel</p>
                                                        <p> 1 (checked)   - Channel n cannot suspend any channel, regardless of the channel's priority.</p>
                                                        </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:0fd1b5ae-3281-4fea-b886-933369f355df"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a> 
                                        </v:var>
                                         <!-- @implements EMI_Object -->  
                                        <v:var name="EMI" type="BOOLEAN">
                                            <a:a name="LABEL" value="Enable Master ID Replication"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                        <html> Vendor specific:
                                                        Enable Master ID replication.
                                                        <p> 0 (unchecked) - Master ID replication is disabled</p>
                                                        <p> 1 (checked)   - Master ID replication is enabled</p>
                                                        </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:7f875a72-0f89-4257-82d2-8c7140d49fc2"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/> 
                                            </a:a>  
                                        </v:var>
                                        
                                        <!-- @implements DMANotification_Object -->
                                        <v:var name="MclDmaTransferCompletionNotif" type="FUNCTION-NAME">
                                            <a:a name="LABEL" value="Mcl Dma Transfer Completion User Notification"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                User callback function to report that the trasnfer is half or complete depending on configuration.
                                                NOTE: please use NULL or NULL_PTR w/o any quotes. If the used string is different from NULL
                                                or NULL_PTR it will be used as the configured function name.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:c5326d00-5f70-49fe-90c4-36a4df202b63"/>
                                            <a:da name="DEFAULT" value="NULL_PTR"/>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                                            false="Invalid name of the Dma Notification. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                            </a:da>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a>  
                                        </v:var>
 
                                        <v:var name="MclDMAChannelEnable" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA Channel Enable
                                                        Enables the DMA channel.
                                                        false -  DMA channel is disabled. This mode is primarily used during configuration of the DMA Mux. The DMA
                                                        has separate channel enables/disables, which should be used to disable or re-configure a DMA
                                                        channel.
                                                        true - DMA channel is enabled
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="DMA Channel Enable"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b4b4cd78-6667-4ba6-8655-6d54ba67871b"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="../../../../../MclGeneral/EnableDMA ='true'"/>
                                            </a:a>  
                                        </v:var>
                                        
                                        <v:var name="MclDMAChannelTriggerEnable" type="BOOLEAN">
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and (node:containsValue(ecu:list('Mcl.DmaMux.TriggerEnableHwChannel'), node:value(../DmaHwChannel)))"/>
                                            </a:a>  
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        DMA Channel Trigger Enable
                                                        Enables the periodic trigger capability for the triggered DMA channel.
                                                        false - Triggering is disabled. If triggering is disabled, and the ENBL bit is set, the DMA Channel will simply
                                                        route the specified source to the DMA channel. (Normal mode)
                                                        true - Triggering is enabled. If triggering is enabled, and the ENBL bit is set, the DMAMUX is in Periodic
                                                        Trigger mode.
                                                        Note: Implementation Specific Parameter.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="DMA Channel Trigger Enable"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:d7ce4c63-d910-4f28-9656-96acb616bd5c"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>          
                                        <v:var name="DmaSource0" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 0"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux0 input source (Physical DMA channels from 0 to 15)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4077-a9bd-0be835a93082"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                             <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and
                                                             (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and                                                
                                                             (text:split(node:value(../DmaHwChannel),'_')[2] &lt;=15) and 
                                                             (../MclDMAChannelEnable = 'true')"/>
                                            </a:a>  
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(text:split(node:value(../DmaHwChannel),'_')[2] &gt;15) and (node:value(../DmaSource0)!='NOT_USED')" 
                                            true="DmaSource0 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource0 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource0, .) or (node:value(../DmaSource0)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux0.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource1" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 1"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux1 input source (Physical DMA channels from 16 to 31)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4077-a9bd-0be835a93083"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and                                              
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 16) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 31) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;31) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;16))
                                                          and (node:value(../DmaSource1)!='NOT_USED')" 
                                                          true="DmaSource1 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource1 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource1, .) or (node:value(../DmaSource1)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux1.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource2" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 2"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux2 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4077-a9bd-0be835a93084"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) 
                                                          and (node:value(../DmaSource2)!='NOT_USED')" 
                                                   true="DmaSource2 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource2 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource2, .) or (node:value(../DmaSource2)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux2.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource3" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 3"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux3 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4077-a9bd-0be835a93085"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                          (node:value(../DmaSource3)!='NOT_USED')" 
                                                   true="DmaSource3 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource3 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource3, .) or (node:value(../DmaSource3)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux3.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>
                                        
                                         <v:var name="DmaSource4" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 4"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux4 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4110-a9bd-0be835a93082"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                        (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                        (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                        (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                          (node:value(../DmaSource4)!='NOT_USED')" 
                                                   true="DmaSource4 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource4 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource4, .) or (node:value(../DmaSource4)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                             <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux4.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        
                                         <v:var name="DmaSource5" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 5"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux5 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4010-a9bd-0be835a93082"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                          (node:value(../DmaSource5)!='NOT_USED')" 
                                                   true="DmaSource5 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource5 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource5, .) or (node:value(../DmaSource5)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                             <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux5.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource6" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 6"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux6 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4011-a9bd-0be835a93083"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                         (node:value(../DmaSource6)!='NOT_USED')" 
                                            true="DmaSource6 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource6 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource6, .) or (node:value(../DmaSource6)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux6.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource7" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 7"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux7 input source(Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4012-a9bd-0be835a93084"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                          (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                          (node:value(../DmaSource7)!='NOT_USED')" 
                                            true="DmaSource7 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource7 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource7, .) or (node:value(../DmaSource7)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux7.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                        <v:var name="DmaSource8" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 8"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux8 input source(Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4013-a9bd-0be835a93085"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and 
                                                          (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and  
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                          (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                          (node:value(../DmaSource8)!='NOT_USED')" 
                                                   true="DmaSource8 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource8 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource8, .) or (node:value(../DmaSource8)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                           <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux8.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>
                                        
                                        <v:var name="DmaSource9" type="ENUMERATION">
                                            <a:a name="LABEL" value="DMA Source 9"/>
                                            <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                Configuration of DmaMux9 input source (Physical DMA channels from 0 to 0)
                                                NOTE: This is an Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:900ec607-a488-4015-a9bd-0be835a93083"/>
                                            <a:da name="DEFAULT" value ="NOT_USED" />
                                            <a:da name="EDITABLE" type="XPath">
                                            <a:tst expr="(../../../../../MclGeneral/EnableDMA ='true') and
                                                         (text:split(node:name(.),'Source')[2] &lt; ecu:get('Mcl.DmaMux.DmaMuxInstances')) and                                              
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &gt;= 0) and 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;= 0) and 
                                                         (../MclDMAChannelEnable = 'true')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((text:split(node:value(../DmaHwChannel),'_')[2] &gt;0) or 
                                                         (text:split(node:value(../DmaHwChannel),'_')[2] &lt;0)) and 
                                                         (node:value(../DmaSource9)!='NOT_USED')" 
                                                   true="DmaSource9 does not support the current configured DMA channel. Please change the DMA hardware channel or set DmaSource9 as NOT_USED."/>
                                            <a:tst expr="text:uniq(../../*/DmaSource9, .) or (node:value(../DmaSource9)='NOT_USED')" false="Duplicate DMA Source"/>
                                            </a:da>
                                           <a:da name="RANGE" type="XPath" expr="text:difference(ecu:list('Mcl.MclConfigSet.DmaMux9.Sources'),text:split('RESERVED RESERVED_0 RESERVED_1 RESERVED_2 RESERVED_3 RESERVED_4 RESERVED_5 RESERVED_6 RESERVED_7 RESERVED_8 RESERVED_9 RESERVED_10 RESERVED_11 RESERVED_12 RESERVED_13 RESERVED_14 RESERVED_15 RESERVED_16 RESERVED_17 RESERVED_18 RESERVED_19 RESERVED_20 RESERVED_21 RESERVED_22 RESERVED_23 RESERVED_24 RESERVED_25 RESERVED_26 RESERVED_27 RESERVED_28 RESERVED_29 RESERVED_30 RESERVED_31 RESERVED_32 RESERVED_33 RESERVED_34 RESERVED_35 RESERVED_36 RESERVED_37 RESERVED_38 RESERVED_39 RESERVED_40 RESERVED_41 RESERVED_42 RESERVED_43 RESERVED_44 RESERVED_45 RESERVED_46 RESERVED_47 RESERVED_48 RESERVED_49 RESERVED_50 RESERVED_51 RESERVED_52 RESERVED_53 RESERVED_54 RESERVED_55 RESERVED_56 RESERVED_57 RESERVED_58 RESERVED_59 RESERVED_60 RESERVED_61 RESERVED_62 RESERVED_63'))"/>
                                        </v:var>

                                      
                                   </v:ctr>
                                </v:lst>   


                        <v:lst name="MclCrossbarLogicalSlavePorts" type="MAP">
                                <a:a name="LABEL" value="Crossbar Logical Slave Ports"/>
                                <a:da name="MIN" value="0"/>
                                <a:da name="MAX" value="12"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="../../../MclGeneral/MclEnableCrossbarSwitch ='true'"/>
                                </a:a> 
                                <a:da name="INVALID" type="XPath">   
                                    <a:tst expr="../../../MclGeneral/MclEnableCrossbarSwitch ='true' and (count(node:fallback(./*,1)) = 0)" true="If Mcl Enable Crossbar Switch = ON, then at least 1 channel must be configured"/> 
                                </a:da> 
                                
                                <v:ctr name="MclCrossbarLogicalSlavePorts" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                    <html> Vendor specific:
                                    Data to configure the crossbar logical slave ports.
                                    </html>
                                        ]]>
                                </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:04ac777b-72f5-480b-b9ec-cc43a5100e5b"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                
                                    <v:var name="MclCrossbarLogicalSlavePortId" type="INTEGER">
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                    Id for the current crossbar logical slave port
                                                    Note: Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="LABEL" value="Crossbar Logical Slave Port Id"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:e62115g8-bb23-41dc-983b-5a40d1ba1318"/>
                                        <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                        <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=15"/>
                                            <a:tst expr="&gt;=0"/>
                                        </a:da>
                                        <a:da name="RANGE" type="XPath">
                                            <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                                            false="Value out of range: must be in range 0 to N-1 (N is number of configured slave ports). Use the Calc button to calculate correct default value"/>
                                            <a:tst     expr="text:uniq(node:fallback( ../../*/MclCrossbarLogicalSlavePortId, text:split('0') ), node:fallback( ., 1 ))" 
                                            false="Duplicated value, MclCrossbarLogicalSlavePortId must be unique across all Mcl slave ports ids. Use the Calc button to calculate correct default value."/>
                                        </a:da>  
                                    </v:var>
                                    
                                    <v:ref name="MclCrossbarHwSlavePortRef" type="REFERENCE">
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                            Select the hardware slave port reference.
                                            </html> ]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="UUID" value="ECUC:2bb4117d-a963-550e-9fbb-e9f8740cbafe"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="text:uniq(../../*/MclCrossbarHwSlavePortRef, .)" false="Duplicate physical channel"/>
                                        </a:da>
                                        <a:da name="REF" 
                                        value="ASPathDataOfSchema:/TS_T2D35M10I0R0/Mcl/MclConfigSet/MclCrossbarInstance/MclCrossbarHwSlavePort"/>
                                    </v:ref>
                                </v:ctr>
                        </v:lst>
                        <v:lst name="MclCrossbarLogicalMasterPorts" type="MAP">
                               <a:a name="LABEL" value="Crossbar Logical Master Ports"/>
                                <a:da name="MIN" value="0"/>
                                <a:da name="MAX" value="16"/>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="(../../../MclGeneral/MclEnableCrossbarSwitch ='true') and (ecu:get('Mcl.Crossbar.EnableInitAXBS_MGPCR') ='1')"/>
                                </a:a> 
                                <a:da name="INVALID" type="XPath">   
                                    <a:tst expr="../../../MclGeneral/MclEnableCrossbarSwitch ='true' and (count(node:fallback(./*,1)) = 0)" true="If Mcl Enable Crossbar Switch = ON, then at least 1 channel must be configured"/> 
                                </a:da> 
                                
                                <v:ctr name="MclCrossbarLogicalMasterPorts" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                    <html> Vendor specific:
                                    Data to configure the crossbar logical Master ports.
                                    </html>
                                        ]]>
                                </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:04acfffb-73f5-480b-b9ec-cc43a5100e5b"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                
                                    <v:var name="MclCrossbarLogicalMasterPortId" type="INTEGER">
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                    Id for the current crossbar logical slave port
                                                    Note: Implementation Specific Parameter.
                                                </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v> 

                                        </a:a>
                                        <a:a name="LABEL" value="Crossbar Logical Master Port Id"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:e621be28-bb23-41dc-983b-5a40d1ba1318"/>
                                        <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                        <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=15"/>
                                            <a:tst expr="&gt;=0"/>
                                        </a:da>
                                        <a:da name="RANGE" type="XPath">
                                            <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                                            false="Value out of range: must be in range 0 to N-1 (N is number of configured Master ports). Use the Calc button to calculate correct default value"/>
                                            <a:tst     expr="text:uniq(node:fallback( ../../*/MclCrossbarLogicalMasterPortId, text:split('0') ), node:fallback( ., 1 ))" 
                                            false="Duplicated value, MclCrossbarLogicalSlavePortId must be unique across all Mcl slave ports ids. Use the Calc button to calculate correct default value."/>
                                        </a:da>  
                                    </v:var>
                                    
                                    <v:ref name="MclCrossbarHwMasterPortRef" type="REFERENCE">
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                            Select the hardware slave port reference.
                                            </html> ]]>
                                        </a:v>
                                        </a:a> 
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                                        <a:a name="UUID" value="ECUC:2bb4117d-a963-572f-9fbb-e9f8740cbafe"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="text:uniq(../../*/MclCrossbarHwMasterPortRef, .)" false="Duplicate physical channel"/>
                                        </a:da>
                                        <a:da name="REF" 
                                        value="ASPathDataOfSchema:/TS_T2D35M10I0R0/Mcl/MclConfigSet/MclCrossbarInstance/MclCrossbarHwMasterPort"/>
                                    </v:ref>
                                </v:ctr>
                        </v:lst>
                        <v:lst name="MclCrossbarInstance" type="MAP">
                            <a:da name="MIN" value="0"/>
                            <a:da name="MAX" value="2"/>
                            <a:a name="EDITABLE" type="XPath">
                            <a:tst expr="../../../MclGeneral/MclEnableCrossbarSwitch ='true'"/>
                            </a:a>           
                            <a:a name="LABEL" value="Crossbar Switch"/>
                       
                            <v:ctr name="MclCrossbarInstance" type="IDENTIFIABLE">
                                <a:a name="DESC" value="EN: Vendor specific: Configuration of a crossbar instance."/>
                                <a:a name="UUID" value="ECUC:5d10957b-c38a-66ed-b06b-4b7e365f1cc3"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                
                                <v:var name="MclCrossbarHwInstance" type="ENUMERATION">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html> Vendor specific:
                                            Select the physical crossbar instance.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                     <a:a name="LABEL" value="Crossbar Hardware Instance"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0aaa248e-f32e-45b6-94be-372ca32a5726"/>
                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Mcl.Crossbar.CrossbarInstances'))[position()-1=node:fallback(node:current()/../@index,'0')]">
                                    </a:da>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="text:uniq(../../*/MclCrossbarHwInstance, .)" false="Duplicate hardware instance of the crossbar switch"/>
                                    </a:da>
                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Mcl.Crossbar.CrossbarInstances')"/>
                                </v:var>
                                
                                <v:lst name="MclCrossbarHwSlavePort" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="MAX" value="8"/>
                                    <v:ctr name="MclCrossbarHwSlavePort" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                                <a:v>
                                                        <![CDATA[EN:<html>
                                                            Hardware slave port configuration.
                                                        </html>]]>
                                                </a:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:762d3422-214a-550f-9f1a-61a2630520cf"/>
                                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/> 
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <v:var name="MclSlavePortNumber" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Slave port number in hardware.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b90b7537-4320-4954-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" type="XPath"  expr="num:i(num:i(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_0') * ecu:list('Mcl.Crossbar.AXBS0.Slave')[position()-1=node:fallback(node:current()/../@index,'0')]
                                                                                    + num:i(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_1') * ecu:list('Mcl.Crossbar.AXBS1.Slave')[position()-1=node:fallback(node:current()/../@index,'0')]
                                                                                    )"
                                                                                    />
                                            <a:a name="LABEL" value="Slave Port Number"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            <a:da name="RANGE" type="XPath">
                                                 <a:tst expr="text:uniq(node:fallback( ../../*/MclSlavePortNumber, text:split('0') ), node:fallback( ., 1 )) " false="The slave port number must be unique for the same AXBS instance."/>
                                                 <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_0') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Slave'),.)) = 'false')"  true="the current slave port number doesn't belong to AXBS0"/>
                                                 <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_1') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Slave'),.)) = 'false')"  true ="the current slave port number doesn't belong to AXBS1"/>
                                            </a:da>   
                                        </v:var>
                                        <v:var name="MclCrossbarPrioMaster0" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master 0 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-4954-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master0"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>             
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster1" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master1 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-4954-81a0-11c4167fe36e"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master1"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster2" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master2 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5054-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="2"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master2"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster3" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master3 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5154-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="3"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master3"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster4" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master4 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5254-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="4"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master4"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster5" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master5 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5354-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="5"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master5"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster6" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master6 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5454-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="6"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster7  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master6"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarPrioMaster7" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                        Priority of the master7 on the cross bar.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:b89b7537-4320-5554-81a0-d0c4167fe36e"/>
                                            <a:da name="DEFAULT" value="7"/>
                                            <a:da name="RANGE" type="XPath">
                                                <a:tst expr="(../MclCrossbarPrioMaster0  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster1  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster2  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster3  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster4  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster5  = .)" true="The masters must have different priority on a port."/>
                                                <a:tst expr="(../MclCrossbarPrioMaster6  = .)" true="The masters must have different priority on a port."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Priority Master7"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i((num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarPrioMaster'))))
                                                                )* num:i(ecu:get('Mcl.Crossbar.PRS.IsReadOnly')='0'))
                                                            "/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=7"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>
                             
                                        <v:var name="MclCrossbarEnableLock" type="BOOLEAN">
                                          <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html> Vendor specific: <p>Locks the configuration registers for the respective slave port.</p></html>]]></a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                          </a:a>
                                          <a:a name="LABEL" value="Lock Configuration Registers"/>
                                          <a:a name="ORIGIN" value="NXP"/>
                                                      <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:72d30c1d-9311-41a5-ba35-40021a249a75"/>
                                          <a:da name="DEFAULT" value="false"/>
                                        </v:var>
                            
                                        <v:var name="MclCrossbarHaltLowPrio" type="BOOLEAN">
                                          <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html> Vendor specific: <p>Sets the initial arbitration priority for low power mode requests. Setting this bit will not affect the request
                                            for low power mode from attaining highest priority once it has control of the slave ports. Disabled = The low power mode request has the highest priority for arbitration on this slave port;
                                            Enabled = The low power mode request has the lowest initial priority for arbitration on this slave port</p></html>]]></a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                          </a:a>
                                          <a:a name="LABEL" value="Halt Low Priority"/>
                                          <a:a name="ORIGIN" value="NXP"/>
                                                      <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:72d30c3d-9311-41a5-ba35-40021a249a75"/>
                                          <a:da name="DEFAULT" value="false"/>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM0" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 0. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 0"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a75"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                         <v:var name="MclCrossbarEnablePrioElevM1" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 1. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 1"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a76"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>                                       
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM2" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 2. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 2"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a77"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM3" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 3. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 3"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a78"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM4" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 4. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 4"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a79"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM5" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 5. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 5"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>

                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a7a"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="MclCrossbarEnablePrioElevM6" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 6. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 6"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>

                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a7b"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnablePrioElevM7" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, enable priority elevation for master 7. If enabled, the master is able to elevate its priority
                                            to the highest.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Priority elevation Master 7"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>

                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30c3d-9311-41a6-ba35-40021a249a7c"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="EDITABLE" type="XPath">
                                                <a:tst expr="num:i(num:i(../../../MclCrossbarHwInstance = 'AXBS_0') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM')))) 
                                                            +num:i(../../../MclCrossbarHwInstance = 'AXBS_1') * num:i(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',substring-after(node:name(.),'MclCrossbarEnablePrioElevM'))))
                                                                )
                                                            "/>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarEnableFixedPrio" type="BOOLEAN">
                                            <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Vendor specific: <p> On this slave port, select the arbitraion mode: if enabled the arbitration mode will be FIXED PRIORITY, if disabled it will be ROUND ROBIN.</p></html>]]></a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="LABEL" value="Enable Fixed Priority Arbitration"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:72d30d3d-9311-41a6-ba35-40021a249a75"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarParkingControl" type="ENUMERATION">
                                            <a:a name="LABEL" value="Parking Control"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:
                                                    <html>
                                                    Determines the slave port’s parking control. The low-power park feature results in an overall power
                                                    savings if the slave port is not saturated; however, this forces an extra latency clock when any master tries
                                                    to access the slave port while not in use because it is not parked on any master.
                                                    </p></html>
                                                    ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:2e702c03-9a34-407f-9476-e14c2d713c75"/>
                                            <a:da name="DEFAULT" value="ParkField"/>
                                            <a:da name="RANGE">
                                                <a:v>ParkField</a:v>
                                                <a:v>LastMaster</a:v>
                                                <a:v>LowPowerPark</a:v>
                                            </a:da>
                                        </v:var>
                                        
                                        <v:var name="MclCrossbarParkField" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html> Vendor specific:
                                                    Determines which master port the current slave port parks on when no masters are actively making requests and the MclCrossbarParkingControl=ParkField.
                                                    </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v> 
                                            </a:a>
                                            <a:a name="EDITABLE" type="XPath">
                                                    <a:tst expr="(node:fallback(../MclCrossbarParkingControl, 'ParkField') = 'ParkField') = 'true'"/>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                             <a:a name="LABEL" value="Park field"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:0aaa248e-f32e-45b6-97be-442ca32a5726"/>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Mcl.Crossbar.CrossbarMasters'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath"> 
                                            <a:tst expr="ecu:list('Mcl.Crossbar.CrossbarMasters')"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                 <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_0') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),.)) = 'false')"  true="the current master port doesn't belong to AXBS0"/>
                                                 <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_1') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),.)) = 'false')"  true ="the current master port doesn't belong to AXBS1"/>
                                            </a:da>
                                                                            
                                            
                                        </v:var>
                                        
 
                                    </v:ctr>


                                </v:lst>
                                <v:lst name="MclCrossbarHwMasterPort" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="MAX" value="8"/>
                                        <a:a name="EDITABLE" type="XPath">
                                            <a:tst expr="ecu:get('Mcl.Crossbar.EnableInitAXBS_MGPCR') = '1'"/>
                                        </a:a> 
                                    <v:ctr name="MclCrossbarHwMasterPort" type="IDENTIFIABLE">
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                Hardware Master port configuration.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:762d3422-214a-550f-9f1a-61a263052ccc"/>
                                    <v:var name="MclMasterPortNumber" type="INTEGER">
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html> Vendor specific:
                                                    Master port number in hardware.
                                                </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="ORIGIN" value="Freescale"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:b90b7537-4320-4954-81a0-d0c4167fe333"/>
                                        <a:da name="DEFAULT" type="XPath"  expr="num:i(num:i(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_0') * substring-after(ecu:list('Mcl.Crossbar.AXBS0.Masters')[position()-1=node:fallback(node:current()/../@index,'0')],'Master')
                                                                                    + num:i(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_1') * substring-after(ecu:list('Mcl.Crossbar.AXBS1.Masters')[position()-1=node:fallback(node:current()/../@index,'0')],'Master')
                                                                                    )"
                                                                                    />
                                        <a:a name="LABEL" value="Master Port Number"/>
                                        <a:da name="INVALID" type="Range">  
                                            <a:tst expr="&lt;=8"/>
                                            <a:tst expr="&gt;=0"/>
                                        </a:da>
                                        <a:da name="RANGE" type="XPath">
                                             <a:tst expr="text:uniq(node:fallback( ../../*/MclMasterPortNumber, text:split('0') ), node:fallback( ., 1 )) " false="The master port number must be unique for the same AXBS instance."/>
                                             <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_0') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS0.Masters'),concat('Master',.))) = 'false')"  true="the current master port doesn't belong to AXBS0"/>
                                             <a:tst expr="(node:fallback(../../../MclCrossbarHwInstance,'AXBS_0') = 'AXBS_1') and (string(node:containsValue(ecu:list('Mcl.Crossbar.AXBS1.Masters'),concat('Master',.))) = 'false')"  true="the current master port doesn't belong to AXBS1"/>
                                        </a:da>    
                                    </v:var>
                                    <v:var name="MclCrossbarArbitrates" type="INTEGER">
                                        <a:a name="LABEL" value="Arbitrates On Undefined Length Bursts"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:
                                                <html>
                                                Determines whether, and when, the crossbar switch arbitrates away the slave port the master owns when
                                                the master is performing undefined length burst accesses.
                                                    0 - No arbitration is allowed during an undefined length burst.
                                                    1 - Arbitration is allowed at any time during an undefined length burst.
                                                    2 - Arbitration is allowed after four beats of an undefined length burst.
                                                    3 - Arbitration is allowed after eight beats of an undefined length burst.
                                                    4 - Arbitration is allowed after 16 beats of an undefined length burst.
                                                </p></html>
                                                ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                            type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:2e702c03-9a34-407f-9476-e14c2d713c88"/>
                                        <a:da name="DEFAULT" value="0"/>
                                        <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=4"/>
                                            <a:tst expr="&gt;=0"/>
                                        </a:da>
                                    </v:var>
                                    </v:ctr>
                                </v:lst>
                            </v:ctr>

                        </v:lst>
  

                            </v:ctr>                          
                        </v:lst>    
                        
                        <!-- @implements CommonPublishedInformation_Object -->
                        <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN: <html> Vendor specific:
                                    Common container, aggregated by all modules. It contains published information about vendor and versions.
                                    </html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:44919a79-b892-492e-a9ca-564bb60af38c"/>

                            <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                                        </html>]]>
                                    </a:v>
                                </a:a>   
                               
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:2a4dc367-722b-4ab8-8fa9-5abf36baef63"/>
                                <a:da name="DEFAULT" value="4"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=4"/>
                                    <a:tst expr="&lt;=4"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:247a09d1-9463-492b-9be9-f1a925db120a"/>
                                <a:da name="DEFAULT" value="2"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=2"/>
                                    <a:tst expr="&lt;=2"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html> Vendor specific:
                                        Revision version number of AUTOSAR specification on which the appropriate implementation is based on.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:626a79b2-3f52-46ad-b609-6a985d61698b"/>
                                <a:da name="DEFAULT" value="2"/>                       
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=2"/>
                                    <a:tst expr="&lt;=2"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="ModuleId" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html>Vendor specific:
                                        Module ID of this module from Module List.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:efb0dbc4-d1ca-4374-b5c2-c2bf4bf93a05"/>
                                <a:da name="DEFAULT" value="255"/>                                         
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=255"/>
                                    <a:tst expr="&lt;=255"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Major version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:ccd5e5a9-6082-4267-ba3d-003be289c116"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=1"/>
                                    <a:tst expr="&lt;=1"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:d018972e-992d-4e6d-8c7c-cd4126e14d5e"/>
                                <a:da name="DEFAULT" value="0"/>                     
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=0"/>
                                    <a:tst expr="&lt;=0"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:e3fb879e-f034-473e-9b52-837934896c40"/>
                                <a:da name="DEFAULT" value="0"/>                                         
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=0"/>
                                    <a:tst expr="&lt;=0"/>
                                </a:da>                    
                            </v:var>

                            <v:var name="VendorApiInfix" type="STRING_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        In driver modules which can be instantiated several times on a single ECU, BSW00347 requires 
                                        that the name of APIs is extended by the VendorId and a vendor specific name. 
                                        This parameter is used to specify the vendor specific name. In total, the 
                                        implementation specific name is generated as follows: &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                        <p>E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write. 
                                        This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.</p>
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:9f393227-196a-42b8-a12e-337c0279f451"/>
                                <a:da name="DEFAULT" value=""/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:da name="EDITABLE" value="false"/>
                            </v:var>

                            <v:var name="VendorId" type="INTEGER_LABEL">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN: <html> Vendor specific:
                                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.
                                        </html>]]>
                                    </a:v>
                                </a:a>              
                                <a:a name="SCOPE" value="LOCAL"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS"> 
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="NXP"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" value="ECUC:2e77dfe4-b371-4d6b-aaec-2e70169abc6d"/>
                                <a:da name="DEFAULT" value="43"/>
                                <a:da name="INVALID" type="Range">
                                    <a:tst expr="&gt;=43"/>
                                    <a:tst expr="&lt;=43"/>
                                </a:da>                    
                            </v:var>
                        </v:ctr>              
                        
                    </v:ctr>
                </d:chc>
                <d:chc name="Mcl_EcuParameterDefinition" 
                    type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
                    <d:ctr type="AR-ELEMENT">
                        <a:a name="UUID" value="ECUC:032b6h33-3415-4410-a59b-a903c0egfa2d"/>
                        <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                        <d:lst name="MODULE_REF">
                            <d:ref type="MODULE_REF" value="ASPath:/TS_T2D35M10I0R0/Mcl"/>
                        </d:lst>
                    </d:ctr>
                </d:chc>
                <d:chc name="Mcl_ModuleDescription" 
                    type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
                    <d:ctr type="AR-ELEMENT">
                        <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                        <d:var name="MODULE_ID" type="INTEGER" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:var>
                        <d:ref type="RECOMMENDED_CONFIGURATION" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:ref>
                        <d:ref type="PRE_CONFIGURED_CONF" >
                            <a:a name="EDITABLE" value="false"/>
                            <a:a name="IMPORTER_INFO" value="@DEF"/>
                        </d:ref>
                        <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" 
                        value="ASPath:/TS_T2D35M10I0R0/Mcl"/>
                    </d:ctr>
                </d:chc>
            </d:lst>
        </d:ctr>
    </d:lst>
</d:ctr>

</datamodel>


